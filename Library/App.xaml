<Application x:Class="Library.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Library"
             StartupUri="Views/Windows/WindowStart.xaml">
    <Application.Resources>
        <Style x:Key="BaseButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="10" BorderBrush="Gray" BorderThickness="2">
                                <Border.Background>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                                        ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#00000000"/>
                                        <GradientStop Offset="0.3" Color="#FFFFFFFF"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#00000000" Offset="1"/>
                                            <GradientStop Color="#FF303030" Offset="0.3"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF33962B"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListViewItem}"  x:Key="listViewItemCustom">
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Grid Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" >
                            <GridViewRowPresenter Content="{TemplateBinding Content}" Margin="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                    <Setter Property="Background" Value="White" />
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                    <Setter Property="Background" Value="LightGray" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#5DADE2"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style TargetType="{x:Type ListView}" x:Key="listViewCustom">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="2">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="3">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"></Setter>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Visible"></Setter>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style TargetType="{x:Type Grid}" x:Key="grdSearch">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="2">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="3">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="4">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Grid}" x:Key="grdForm">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="1">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="4">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}" x:Key="btnAdd">
            <Setter Property="Content" Value="Əlavə et"/>
            <Setter Property="Command" Value="{Binding Save}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="2">
                    <Setter Property="Content" Value="Yadda Saxla"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="3">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="4">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}" x:Key="btnChange">
            <Setter Property="Content" Value="Redaktə et"/>
            <Setter Property="Command" Value="{Binding Save}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="1">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="2">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="3">
                    <Setter Property="Content" Value="Yadda Saxla"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}" x:Key="btnReject">
            <Setter Property="Content" Value="Ləğv et"/>
            <Setter Property="Command" Value="{Binding Reject}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="1">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}" x:Key="btnDelete">
            <Setter Property="Content" Value="Sil"/>
            <Setter Property="Command" Value="{Binding Delete}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="1">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="2">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="3">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}" x:Key="btnExcel">
            <Setter Property="Content" Value="Excel"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Command" Value="{Binding ExportExcel}"/>
            <Setter Property="Background" Value="#FF008306"/>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}" x:Key="btnPdf">
            <Setter Property="Content" Value="PDF"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Command" Value="{Binding ExportPdf}"/>
            <Setter Property="Background" Value="#FF9E0303"/>
        </Style>
    </Application.Resources>
</Application>
